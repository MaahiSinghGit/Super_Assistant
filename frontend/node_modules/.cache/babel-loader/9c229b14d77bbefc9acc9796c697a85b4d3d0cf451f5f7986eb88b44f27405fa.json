{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maahi\\\\OneDrive\\\\Desktop\\\\Project\\\\Front_End\\\\frontend\\\\src\\\\pages\\\\FormEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextQuestion from '../components/TextQuestion';\nimport ImageQuestion from '../components/ImageQuestion';\nimport axios from 'axios';\nimport app from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormEditor = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    type: 'text',\n    content: 'Sample Text Question'\n  }, {\n    type: 'image',\n    content: 'Sample Image Question',\n    image: 'sample_image_url.jpg'\n  }]);\n  const saveForm = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/forms', {\n        questions\n      });\n      console.log('Form saved successfully:', response.data);\n    } catch (error) {\n      console.error('Error saving form:', error);\n    }\n  };\n  const handleQuestionChange = (index, updatedQuestion) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index] = updatedQuestion;\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [questions.map((question, index) => {\n      if (question.type === 'text') {\n        return /*#__PURE__*/_jsxDEV(TextQuestion, {\n          content: question.content,\n          onChange: content => handleQuestionChange(index, {\n            ...question,\n            content\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      } else if (question.type === 'image') {\n        return /*#__PURE__*/_jsxDEV(ImageQuestion, {\n          content: question.content,\n          image: question.image,\n          onChange: content => handleQuestionChange(index, {\n            ...question,\n            content\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      } else {\n        return null; // Add more question types here if needed\n      }\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveForm,\n      children: \"Save Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FormEditor, \"tJYEd+VwLERjYWYYwrYBqWi11UE=\");\n_c = FormEditor;\nexport default FormEditor;\nvar _c;\n$RefreshReg$(_c, \"FormEditor\");","map":{"version":3,"names":["React","useState","TextQuestion","ImageQuestion","axios","app","jsxDEV","_jsxDEV","FormEditor","_s","questions","setQuestions","type","content","image","saveForm","response","post","console","log","data","error","handleQuestionChange","index","updatedQuestion","updatedQuestions","children","map","question","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maahi/OneDrive/Desktop/Project/Front_End/frontend/src/pages/FormEditor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TextQuestion from '../components/TextQuestion';\r\nimport ImageQuestion from '../components/ImageQuestion';\r\nimport axios from 'axios';\r\nimport app from '../App';\r\n\r\nconst FormEditor = () => {\r\n  const [questions, setQuestions] = useState([\r\n    { type: 'text', content: 'Sample Text Question' },\r\n    { type: 'image', content: 'Sample Image Question', image: 'sample_image_url.jpg' },\r\n  ]);\r\n\r\n  const saveForm = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/forms', { questions });\r\n      console.log('Form saved successfully:', response.data);\r\n    } catch (error) {\r\n      console.error('Error saving form:', error);\r\n    }\r\n  };\r\n\r\n  const handleQuestionChange = (index, updatedQuestion) => {\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index] = updatedQuestion;\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questions.map((question, index) => {\r\n        if (question.type === 'text') {\r\n          return (\r\n            <TextQuestion\r\n              key={index}\r\n              content={question.content}\r\n              onChange={(content) => handleQuestionChange(index, { ...question, content })}\r\n            />\r\n          );\r\n        } else if (question.type === 'image') {\r\n          return (\r\n            <ImageQuestion\r\n              key={index}\r\n              content={question.content}\r\n              image={question.image}\r\n              onChange={(content) => handleQuestionChange(index, { ...question, content })}\r\n            />\r\n          );\r\n        } else {\r\n          return null; // Add more question types here if needed\r\n        }\r\n      })}\r\n\r\n      <button onClick={saveForm}>Save Form</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CACzC;IAAEW,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAuB,CAAC,EACjD;IAAED,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,uBAAuB;IAAEC,KAAK,EAAE;EAAuB,CAAC,CACnF,CAAC;EAEF,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,iCAAiC,EAAE;QAAEP;MAAU,CAAC,CAAC;MACnFQ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,eAAe,KAAK;IACvD,MAAMC,gBAAgB,GAAG,CAAC,GAAGf,SAAS,CAAC;IACvCe,gBAAgB,CAACF,KAAK,CAAC,GAAGC,eAAe;IACzCb,YAAY,CAACc,gBAAgB,CAAC;EAChC,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,GACGhB,SAAS,CAACiB,GAAG,CAAC,CAACC,QAAQ,EAAEL,KAAK,KAAK;MAClC,IAAIK,QAAQ,CAAChB,IAAI,KAAK,MAAM,EAAE;QAC5B,oBACEL,OAAA,CAACL,YAAY;UAEXW,OAAO,EAAEe,QAAQ,CAACf,OAAQ;UAC1BgB,QAAQ,EAAGhB,OAAO,IAAKS,oBAAoB,CAACC,KAAK,EAAE;YAAE,GAAGK,QAAQ;YAAEf;UAAQ,CAAC;QAAE,GAFxEU,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX,CAAC;MAEN,CAAC,MAAM,IAAIL,QAAQ,CAAChB,IAAI,KAAK,OAAO,EAAE;QACpC,oBACEL,OAAA,CAACJ,aAAa;UAEZU,OAAO,EAAEe,QAAQ,CAACf,OAAQ;UAC1BC,KAAK,EAAEc,QAAQ,CAACd,KAAM;UACtBe,QAAQ,EAAGhB,OAAO,IAAKS,oBAAoB,CAACC,KAAK,EAAE;YAAE,GAAGK,QAAQ;YAAEf;UAAQ,CAAC;QAAE,GAHxEU,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CAAC;MAEN,CAAC,MAAM;QACL,OAAO,IAAI,CAAC,CAAC;MACf;IACF,CAAC,CAAC,eAEF1B,OAAA;MAAQ2B,OAAO,EAAEnB,QAAS;MAAAW,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACxB,EAAA,CAjDID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}